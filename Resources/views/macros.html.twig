{% macro renderTransitionButton(workflow, transition, enabled, url, redirectToWorkflow) %}
    <a href="{{ url }}"
        data-enabled="{{ enabled }}"
        data-redirect-to-workflow="{{ redirectToWorkflow }}"
        class="btn icons-holder-text no-hash {% if not enabled %}disabled {% endif %}{% if transition.options.frontend is defined and transition.options.frontend.class is defined %}{{ transition.options.frontend.class }}{% endif %}"
        id="transition-{{ workflow.name }}-{{ transition.name }}">
        {% if transition.options.frontend is defined and transition.options.frontend.icon is defined %}
            <i class="{{ transition.options.frontend.icon }} hide-text">{{ transition.label }}</i>
        {% endif %}
        {{ transition.label }}
    </a>
{% endmacro %}

{% macro renderTransitionsJs(workflowData, blockId) %}
    <script type="text/javascript">
        $(function() {
            var container = $('#{{ blockId }}');
            {% for data in workflowData %}
                {% for transition in data.transitions %}
                container.on('click', '#transition-{{ data.workflow.name }}-{{ transition.name }}', function(e) {
                    var element = this;
                    var enabled = $(element).data('enabled');
                    if (enabled) {
                        e.preventDefault();
                        $.getJSON(this.href)
                        .done(function(response) {
                            var workflowItemId = null;
                            if (response.workflowItem && response.workflowItem.id) {
                                workflowItemId = response.workflowItem.id;
                            }
                            var needRedirect = $(element).data('redirect-to-workflow');
                            if (needRedirect && workflowItemId) {
                                var redirectUrl = Routing.generate(
                                    'oro_workflow_step_edit',
                                    { id: workflowItemId }
                                );

                                if (Oro.hashNavigationEnabled()) {
                                    Oro.hashNavigationInstance.setLocation(redirectUrl);
                                } else {
                                    window.location.href = redirectUrl;
                                }
                            } else {
                                if (Oro.hashNavigationEnabled()) {
                                    Oro.hashNavigationInstance.loadPage();
                                } else {
                                    window.location.reload();
                                }
                            }
                        })
                        .fail(function(jqxhr, textStatus, error) {
                            Oro.NotificationFlashMessage('error', _.__('Could not perform transition'));
                        });
                    }
                    return false;
                });
                {% endfor %}
            {% endfor %}
        });
    </script>
{% endmacro %}
