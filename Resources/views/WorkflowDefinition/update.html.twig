{% extends 'OroUIBundle:actions:update.html.twig' %}
{% form_theme form with ['OroFormBundle:Form:fields.html.twig'] %}
{% import 'OroQueryDesignerBundle::macros.html.twig' as QD %}

{% oro_title_set({params : {"%workflow_definition.label%": entity.label} }) %}
{% set title = entity.name
    ? entity.name ~ ' - ' ~ 'Update'|trans ~ ' ' ~ 'oro.workflow.workflowdefinition.entity_label'|trans
    : 'New'|trans ~ ' ' ~ 'oro.workflow.workflowdefinition.entity_label'|trans
%}
{% set formAction = entity.name ? path('oro_workflow_definition_update', { 'name': entity.name }) : path('oro_workflow_definition_create')  %}

{% block head_script %}
    {{ parent() }}

    {% block stylesheets %}
        {{ form_stylesheet(form) }}
    {% endblock %}
{% endblock %}

{% block navButtons %}
    {% if entity.name and resource_granted('DELETE', entity) %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_workflow_definition_delete', {'workflowDefinition': entity.name}),
            'dataRedirect': path('oro_workflow_definition_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-workflow',
            'dataId': entity.name,
            'entity_label': 'oro.workflow.workflowdefinition.entity_label'|trans
        }) }}
        {{ UI.buttonSeparator() }}
    {% endif %}
    {{ UI.cancelButton(path('oro_workflow_definition_index')) }}

    {# API REST route for POST used both for create and update #}
    {% if entity.name %}
        {% set apiPath = path('oro_workflow_api_rest_workflowdefinition_post', {workflowDefinition: entity.name}) %}
    {% else %}
        {% set apiPath = path('oro_workflow_api_rest_workflowdefinition_post') %}
    {% endif %}
    <div class="btn-group">
        <button type="button" class="btn btn-success" id="save-btn" data-url="{{ apiPath }}">{{ 'Save'|trans }}</button>
    </div>
{% endblock %}

{% block pageHeader %}
    {% if entity.name %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_workflow_definition_index'),
            'indexLabel': 'oro.workflow.workflowdefinition.entity_plural_label'|trans,
            'entityTitle': entity.label
        } %}
        {{ parent() }}
    {% else %}
        {% include 'OroUIBundle::page_title_block.html.twig' %}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}
    <li>{{ 'oro.workflow.workflowdefinition.created_at.label'|trans }}: {{ entity.createdAt ? entity.createdAt|oro_format_datetime : 'N/A' }}</li>
    <li>{{ 'oro.workflow.workflowdefinition.updated_at.label'|trans }}: {{ entity.updatedAt ? entity.updatedAt|oro_format_datetime : 'N/A' }}</li>
{% endblock stats %}

{% block content_data %}
    {{ QD.query_designer_column_chain_template('entity-column-chain-template') }}

    {% set requiredConstraint = {
        "NotBlank": null
    } %}
    <script type="text/template" id="transition-form-template">
        <div class="row-fluid" style="height: 600px;overflow: auto;">
            <form action="#">
                <div class="form-horizontal">
                    <div class="control-group">
                        <label class="control-label required">{{ "Transition name"|trans }} <em>*</em></label>
                        <div class="controls">
                            <input type="text" name="label" value="<%= label %>" data-validation="{{ requiredConstraint|json_encode }}">
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label required">{{ "From step"|trans }}  <em>*</em></label>
                        <div class="controls">
                            <select name="step_from" data-validation="{{ requiredConstraint|json_encode }}"
                                <% if (name) { %>disabled="disabled"<% } %>
                            >
                                <% _.each(allowedStepsFrom, function (step) { %>
                                <option
                                    value="<%= step.get('name') %>"
                                    <% if (step.get('name') == stepFrom) { %>selected="selected"<% } %>
                                ><%= step.get('label') %></option>
                                <% }); %>
                            </select>
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label required">{{ "To step"|trans }}  <em>*</em></label>
                        <div class="controls">
                            <select name="step_to" data-validation="{{ requiredConstraint|json_encode }}">
                                <option value=""></value>
                                <% _.each(allowedStepsTo, function (step) { %>
                                <option
                                    value="<%= step.get('name') %>"
                                    <% if (step.get('name') == step_to) { %>selected="selected"<% } %>
                                ><%= step.get('label') %></option>
                                <% }); %>
                            </select>
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label">{{ "Warning message"|trans }}</label>
                        <div class="controls">
                            <input type="text" name="message" value="<%= message %>">
                        </div>
                    </div>
                </div>

                <div>
                    <h5>{{ 'Button'|trans }}</h5>
                    <div class="form-horizontal">
                        {{ UI.getApplicableForUnderscore(form_row(form.transition_prototype_icon))|raw }}

                        <% print('<sc' + 'ript>'); %>
                            require(['jquery'], function($) {
                            $('#{{ form.transition_prototype_icon.vars.id }}').select2('val', '<%= buttonIcon %>');
                            });
                        <% print('</sc' + 'ript>'); %>

                        <div class="control-group">
                            <label class="control-label required">{{ "Button style"|trans }} </label>
                            <div class="controls">
                                <select name="button_color">
                                    <% _.each(allowedButtonStyles, function (style) { %>
                                    <option value="<%= style.name %>"
                                    <% if (buttonStyle == style.name) { %>selected="selected"<% } %>
                                    ><%= style.label %></option>
                                    <% }); %>
                                </select>
                            </div>
                        </div>

                        <div class="control-group transition-example-container">
                            <div class="controls">
                                <div class="transition-btn-example"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <h5>{{ "Attributes"|trans }}</h5>
                <div class="form-horizontal">
                    <div class="control-group">
                        <label class="control-label required">{{ "View form"|trans }}  <em>*</em></label>
                        <div class="controls">
                            <select name="display_type" data-validation="{{ requiredConstraint|json_encode }}">
                                <option value="dialog" <% if (display_type == 'dialog') { %>selected="selected"<% } %>>{{ "Popup window"|trans }}</value>
                                <option value="page" <% if (display_type == 'page') { %>selected="selected"<% } %>>{{ "Separate page"|trans }}</value>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="widget-actions">
                    <button type="reset" class="btn">{{ "Cancel"|trans }}</button>
                    <button type="submit" class="btn btn-success">{{ "Ok"|trans }}</button>
                </div>
            </form>

            <div class="transition-attributes-form-container"></div>
            <div class="transition-attributes-list-container" style="margin-top: 10px"></div>
        </div>
    </script>

    <script type="text/template" id="step-form-template">
        {% set orderConstraints = requiredConstraint|merge({
            "Range": {
                "minMessage": "This value should be {{ limit }} or more."|trans,
                "maxMessage": "This value should be {{ limit }} or less."|trans,
                "invalidMessage": "This value should be a valid number."|trans,
                "min": 0,
                "max": null
            }
        }) %}

        <form action="#">
            <div class="row-fluid">
                <div class="form-horizontal">
                    <div class="control-group">
                        <label class="control-label required">{{ "Name"|trans }} <em>*</em></label>
                        <div class="controls">
                            <input type="text" name="label" value="<%= label %>" data-validation="{{ requiredConstraint|json_encode }}">
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label">{{ "Order"|trans }}</label>
                        <div class="controls">
                            <input type="text" name="order" value="<%= order %>" data-validation="{{ orderConstraints|json_encode }}">
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label">{{ "Final"|trans }}</label>
                        <div class="controls">
                            <input type="checkbox" name="is_final" <% if (is_final) { %>checked="checked"<% } %>>
                        </div>
                    </div>
                </div>

                <div class="transitions-list-container"></div>
            </div>

            <div class="widget-actions">
                <button type="reset" class="btn">{{ "Cancel"|trans }}</button>
                <button type="submit" class="btn btn-success">{{ "Ok"|trans }}</button>
            </div>
        </form>
    </script>

    <script type="text/template" id="step-list-template">
        <table class="grid table-hover table table-bordered table-condensed" style="margin-bottom: 10px">
            <thead>
                <th>{{ "Step name"|trans }}</th>
                <th>{{ "Transitions"|trans }}</th>
                <th>{{ "Poisition"|trans }}</th>
                <th>{{ "Actions"|trans }}</th>
            </thead>
            <tbody></tbody>
        </table>
    </script>

    <script type="text/template" id="step-row-template">
        <td class="step-name">
            <% if (_is_start) { %>
                <%= label %>
            <% } else { %>
                <a href="#" class="edit-step" title="Edit step"><%= label %></a>
            <% } %>
            <% if (is_final) { %>&nbsp;<span class="label">{{ "Final"|trans }}</span><% } %>
        </td>
        <td class="step-transitions"></td>
        <td><%= order %></td>
        <td class="step-actions">
            <div class="pull-right">
                <% if (!_is_start) { %>
                    <a href="#" class="edit-step" title="Edit step"><i class="icon-edit"/></a>
                    <a href="#" class="delete-step" title="Delete step"><i class="icon-remove"/></a>
                <% } %>
                <a href="#" class="add-step-transition" title="Add transition"><i class="icon-plus-sign"/></a>
            </div>
        </td>
    </script>

    <script type="text/template" id="transition-row-short-template">
        <a href="#" class="delete-transition" title="Remove transition"><i class="icon-trash"></i></a> <a href="#" class="edit-transition" title="Edit transition"><%= label %></a> <i class="icon-long-arrow-right"/> <span><%= stepToLabel %></span>
    </script>

    <script type="text/template" id="attribute-form-option-edit-template">
        <form action="#">
            <div class="form-horizontal">
                <div class="control-group">
                    <label class="control-label required">{{ "Entity field"|trans }} <em>*</em></label>
                    <div class="controls">
                        <input type="hidden" name="property_path" data-validation="{{ requiredConstraint|json_encode }}"/>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">{{ "Label"|trans }}</label>
                    <div class="controls">
                        <input type="text" name="label" value="<%= label %>" placeholder="{{ 'Leave empty for system value'|trans }}"/>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">{{ "Required"|trans }}</label>
                    <div class="controls">
                        <input type="checkbox" name="required" <% if (required) { %>checked="checked"<% } %>/>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary"><i class="icon-plus"></i> {{ 'Add'|trans }}</button>
            </div>
        </form>
    </script>

    <script type="text/template" id="attribute-form-option-list-template">
        <table class="grid table-hover table table-bordered table-condensed" style="margin-bottom: 10px">
            <thead>
            <th>{{ "Entity field"|trans }}</th>
            <th>{{ "Label"|trans }}</th>
            <th>{{ "Required"|trans }}</th>
            <th>{{ "Actions"|trans }}</th>
            </thead>
            <tbody></tbody>
        </table>
    </script>

    <script type="text/template" id="attribute-form-option-row-template">
        <td>
            <% if (!is_entity_attribute) { %>
                <span class="badge">{{ 'system'|trans }}</span>
            <% } %>
            <%= entityField %>
        </td>
        <td>
            <% if (!label) { %>
                <span class="badge">{{ 'system'|trans }}</span>
            <% } else { %>
                <%= label %>
            <% } %>
        </td>
        <td>
            <% if (required) { %><span class="badge badge-important">{{ "yes"|trans }}</span><% } %>
        </td>
        <td class="step-actions">
            <div class="pull-right">
                <% if (is_entity_attribute) { %>
                <a href="#" class="edit-form-option" title="{{ 'Edit field'|trans }}"><i class="icon-edit"/></a>
                <% } %>
                <a href="#" class="delete-form-option" title="{{ 'Delete field'|trans }}"><i class="icon-remove"/></a>
            </div>
        </td>
    </script>

    {% set dataBlocks = [{
        'title': 'General'|trans,
        'class': 'active',
        'subblocks': [
            {
            'data': [
                    form_row(form.label),
                    form_row(form.related_entity),
                    form_row(form.steps_display_ordered)
                ]
            }
        ]
    }] %}

    {% set stepsListWidget %}
        <div class="workflow-definition-steps-list-container"></div>
        <div class="workflow-definition-buttons">
            <div class="pull-right">
                <button type="button" class="btn btn-primary add-transition-btn"><i class="icon-plus"></i> {{ 'Add transition'|trans }}</button>
                <button type="button" class="btn btn-primary add-step-btn"><i class="icon-plus"></i> {{ 'Add step'|trans }}</button>
            </div>
        </div>

        <script type="text/javascript">
            require([
                'oroworkflow/js/workflow-management',
                'oroworkflow/js/workflow-management/workflow/model',
                'oroworkflow/js/workflow-management/step/model',
                'oroworkflow/js/workflow-management/transition/model',
                'oroworkflow/js/workflow-management/attribute/model',
                'oroworkflow/js/workflow-management/step/collection',
                'oroworkflow/js/workflow-management/transition/collection',
                'oroworkflow/js/workflow-management/attribute/collection'
            ],
            function(WorkflowManagement, WorkflowModel,
                StepModel,
                TransitionModel,
                AttributeModel,
                StepCollection,
                TransitionCollection,
                AttributeCollection
            ) {
                var steps = new StepCollection(),
                    transitions = new TransitionCollection(),
                    attributes = new AttributeCollection();

                {% if entity.configuration.steps is defined %}
                    {% for stepName, stepConfig in entity.configuration.steps %}
                        {% set stepConfig = stepConfig|merge({name: stepName}) %}
                        steps.add(new StepModel({{ stepConfig|json_encode|raw }}));
                    {% endfor %}
                {% endif %}

                {% if entity.configuration.transitions is defined %}
                    {% for transitionName, transitionConfig in entity.configuration.transitions %}
                        {% set transitionConfig = transitionConfig|merge({name: transitionName}) %}
                        transitions.add(new TransitionModel({{ transitionConfig|json_encode|raw }}));
                    {% endfor %}
                {% endif %}

                {% if entity.configuration.attributes is defined %}
                    {% for attributeName, attributeConfig in entity.configuration.attributes %}
                        {% set attributeConfig = attributeConfig|merge({name: attributeName}) %}
                        attributes.add(new AttributeModel({{ attributeConfig|json_encode|raw }}));
                    {% endfor %}
                {% endif %}

                var configuration = {{ entity.configuration|json_encode|raw }};
                configuration.name = {{ entity.name|json_encode|raw }};
                configuration.label = {{ entity.label|json_encode|raw }};
                configuration.entity = {{ entity.relatedEntity|json_encode|raw }};
                configuration.start_step = {{ entity.startStep.name|default(null)|json_encode|raw }};
                configuration.steps_display_ordered = {{ entity.stepsDisplayOrdered|json_encode|raw }};
                configuration.steps = steps;
                configuration.transitions = transitions;
                configuration.attributes = attributes;

                var workflowModel = new WorkflowModel(configuration);
                workflowModel.setSystemEntities({{ system_entities|json_encode|raw }});

                var workflowManagement = new WorkflowManagement({
                    el: '#{{ form.vars.id }}',
                    stepsEl: '.workflow-definition-steps-list-container',
                    saveBtnEl: '#save-btn',
                    model: workflowModel
                });

                workflowManagement.render();
            });
        </script>
    {% endset %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'Designer'|trans,
            'subblocks': [
                {
                    'title': 'Workflow steps and transitions'|trans,
                    'data': [stepsListWidget]
                }
        ]
    }] ) %}

    {% set id = 'workflow-designer' %}
    {% set data = {
        'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
{% endblock content_data %}
